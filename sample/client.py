# -*- generated by 1.0.9 -*-
import da
PatternExpr_175 = da.pat.TuplePattern([da.pat.ConstantPattern('Ping')])
PatternExpr_180 = da.pat.FreePattern('p')
PatternExpr_194 = da.pat.TuplePattern([da.pat.ConstantPattern('Pong')])
PatternExpr_199 = da.pat.FreePattern('p')
_config_object = {}

class Client(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_ClientReceivedEvent_0', PatternExpr_175, sources=[PatternExpr_180], destinations=None, timestamps=None, record_history=None, handlers=[self._Client_handler_174]), da.pat.EventPattern(da.pat.ReceivedEvent, '_ClientReceivedEvent_1', PatternExpr_194, sources=[PatternExpr_199], destinations=None, timestamps=None, record_history=None, handlers=[self._Client_handler_193])])

    def setup(self, others, **rest_237):
        super().setup(others=others, **rest_237)
        self._state.others = others
        self._state.others = self._state.others

    def run(self):
        self.send('ping', to=self._state.others)

    def _Client_handler_174(self, p):
        self.output(('Received ping from ' + p))
        self.send(('pong',), to=p)
    _Client_handler_174._labels = None
    _Client_handler_174._notlabels = None

    def _Client_handler_193(self, p):
        self.output(('Received pong from ' + p))
    _Client_handler_193._labels = None
    _Client_handler_193._notlabels = None

class Node_(da.NodeProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([])
    _config_object = {'clock': 'Lamport'}

    def run(self):
        clients = self.new(Client, num=2)
        for c in clients:
            self._setup(c, ((clients - {c}),))
        for c in clients:
            self._start(c)
